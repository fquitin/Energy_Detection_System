`timescale 1ns / 1ps
//////////////////////////////////////////////////////////////////////////////////
// Company: 
// Engineer: 
// 
// Create Date:    09:54:23 07/11/2017 
// Design Name: 
// Module Name:    energy_detection_module 
// Project Name: 
// Target Devices: 
// Tool versions: 
// Description: 
//
// Dependencies: 
//
// Revision: 
// Revision 0.01 - File Created
// Additional Comments: 
//
//////////////////////////////////////////////////////////////////////////////////
module energy_detection_module(
			       input 	     clock,
			       input 	     reset,
			       input [31:0]  th_value,
			       input [9:0]   window_size,
			       input [31:0]  xk_d_fct,
			       input 	     dv_d_fct,
			       output [31:0] xk_d_fct_dt,
			       output 	     dv_d_fct_dt);

   
   wire 				     pop_fin;
   wire 				     push_fin;
   wire 				     sclr_fin;
   wire 				     pop_fout;
   wire 				     push_fout;
   wire 				     sclr_fout;
   wire 				     sclr_ew;
   wire 				     ce_ew;
   wire 				     add_subn_ew;
   wire 				     ce_thw;
   wire 				     select_th;
   wire 				     end_sig;
   wire 				     sclr_cnt1;
   wire 				     en_cnt1;
   wire 				     sclr_cnt2;
   wire 				     en_cnt2;
   wire 				     sclr_dres;
   wire 				     en_dres;
   wire 				     empty_fin;
   wire 				     cnt1_tc;
   wire 				     cnt2_tc;

   
   control_unit_ed CU(
		   .clock(clock),
		   .reset(reset), 
		   .empty_fin(empty_fin),
		   .cnt1_tc(cnt1_tc),
		   .cnt2_tc(cnt2_tc),
		   .pop_fin(pop_fin),
		   .push_fin(push_fin),
		   .sclr_fin(sclr_fin),
		   .pop_fout(pop_fout),
		   .push_fout(push_fout), 
		   .sclr_fout(sclr_fout),
		   .sclr_ew(sclr_ew),
		   .ce_ew(ce_ew),
		   .add_subn_ew(add_subn_ew),
		   .ce_thw(ce_thw),
    		   .select_th(select_th),
		   .end_sig(end_sig),
		   .sclr_cnt1(sclr_cnt1),
		   .en_cnt1(en_cnt1),
	           .sclr_cnt2(sclr_cnt2),
		   .en_cnt2(en_cnt2),
		   .sclr_dres(sclr_dres),
		   .en_dres(en_dres));

   datapath_unit_ed DP(
		       .clock(clock),
		       .window_size(window_size),
		       .xk_d_fct(xk_d_fct),
		       .th_value(th_value), 
		       .pop_fin(pop_fin),
		       .push_fin(dv_d_fct),
		       .sclr_fin(sclr_fin),
		       .pop_fout(pop_fout),
		       .push_fout(push_fout), 
		       .sclr_fout(sclr_fout),
		       .sclr_ew(sclr_ew),
		       .ce_ew(ce_ew),
		       .add_subn_ew(add_subn_ew),
		       .ce_thw(ce_thw),
    		       .select_th(select_th),
		       .end_sig(end_sig),
		       .sclr_cnt1(sclr_cnt1),
		       .en_cnt1(en_cnt1),
		       .sclr_cnt2(sclr_cnt2),
		       .en_cnt2(en_cnt2),
		       .sclr_dres(sclr_dres),
		       .en_dres(en_dres), 	   
		       .empty_fin(empty_fin),
		       .cnt1_tc(cnt1_tc),
		       .cnt2_tc(cnt2_tc),
		       .xk_d_fct_dt(xk_d_fct_dt));

   FFD dv_sq_m_dt_delayed(
     .q(dv_d_fct_dt),
     .clk(clock),
     .rst(reset),
     .d(pop_fout)
    );


endmodule
